# Fluentd configuration for GameChat AI log collection

<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# Backend application logs
<source>
  @type tail
  path /var/log/app/backend.log
  pos_file /var/log/fluentd-backend.log.pos
  tag gamechat.backend
  format json
</source>

# Frontend application logs
<source>
  @type tail
  path /var/log/app/frontend.log
  pos_file /var/log/fluentd-frontend.log.pos
  tag gamechat.frontend
  format json
</source>

# Nginx access logs
<source>
  @type tail
  path /var/log/nginx/access.log
  pos_file /var/log/fluentd-nginx-access.log.pos
  tag gamechat.nginx.access
  format nginx
</source>

# Nginx error logs
<source>
  @type tail
  path /var/log/nginx/error.log
  pos_file /var/log/fluentd-nginx-error.log.pos
  tag gamechat.nginx.error
  format /^(?<time>[^ ]* [^ ]*) \[(?<log_level>[^\]]*)\] (?<message>.*)$/
</source>

# Filter for adding common fields
<filter gamechat.**>
  @type record_transformer
  <record>
    hostname ${hostname}
    service_name gamechat-ai
    environment ${ENV["ENVIRONMENT"] || "production"}
    timestamp ${time}
  </record>
</filter>

# Output to stdout for debugging
<match gamechat.**>
  @type stdout
  @id stdout_output
</match>

# Output to Elasticsearch (if available)
<match gamechat.**>
  @type elasticsearch
  host elasticsearch
  port 9200
  index_name gamechat-ai
  type_name logs
  @id elasticsearch_output
  
  # Buffer configuration
  <buffer>
    @type file
    path /var/log/fluentd-buffers/elasticsearch.buffer
    flush_mode interval
    retry_type exponential_backoff
    flush_thread_count 2
    flush_interval 5s
    retry_forever
    retry_max_interval 30
    chunk_limit_size 2M
    queue_limit_length 8
    overflow_action block
  </buffer>
</match>

# Output to file for backup
<match gamechat.**>
  @type file
  path /var/log/app/aggregated
  @id file_output
  
  # Time slicing
  time_slice_format %Y%m%d
  time_slice_wait 10m
  
  # Buffer settings
  <buffer time>
    timekey 1h
    timekey_wait 10m
    timekey_use_utc true
  </buffer>
  
  # File format
  <format>
    @type json
  </format>
</match>
