version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:20.18
    working_directory: ~/project
  python-executor:
    docker:
      - image: cimg/python:3.13
    working_directory: ~/project

jobs:
  install:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Show directory structure
          command: |
            pwd
            ls -l
            ls -l frontend
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "frontend/package-lock.json" }}
            - v1-dependencies-
      - run:
          name: Configure npm for better network reliability
          command: |
            npm config set registry https://registry.npmjs.org/
            npm config set fetch-retry-mintimeout 20000
            npm config set fetch-retry-maxtimeout 120000
            npm config set fetch-retries 3
            npm config set fetch-timeout 300000
      - run:
          name: Install dependencies with retry
          command: |
            cd frontend
            npm ci --prefer-offline --no-audit --progress=false || \
            (sleep 10 && npm ci --prefer-offline --no-audit --progress=false) || \
            (sleep 30 && npm ci --no-audit --progress=false)
      - save_cache:
          key: v1-dependencies-{{ checksum "frontend/package-lock.json" }}
          paths:
            - frontend/node_modules
      - persist_to_workspace:
          root: frontend
          paths:
            - node_modules

  build:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: cd frontend && npm run build

  start-server:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: cd frontend && npm run build
      - run:
          name: Start server and check health
          command: |
            cd frontend && nohup npm start & sleep 10
            curl -f http://localhost:3000 || (echo "Server did not start" && exit 1)

  test:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Lint
          command: cd frontend && npm run lint
      - run:
          name: Test
          command: cd frontend && npm test

  backend-test:
    executor: python-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-python-dependencies-{{ checksum "requirements.txt" }}
            - v1-python-dependencies-
      - run:
          name: Set up venv and install dependencies
          command: |
            python -m venv .venv
            . .venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt --timeout 300 --retries 3
            which python
            which pytest
      - save_cache:
          key: v1-python-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - .venv
      - run:
          name: Run backend tests
          command: |
            . .venv/bin/activate
            cd backend && python -m pytest app/tests/ -v
      - run:
          name: Run type check
          command: |
            . .venv/bin/activate
            mypy backend/app --config-file mypy.ini --exclude 'backend/app/tests'

workflows:
  version: 2
  frontend-ci:
    jobs:
      - install
      - build:
          requires:
            - install
      - test:
          requires:
            - build
      - start-server:
          requires:
            - build
      - backend-test