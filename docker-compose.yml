services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: gamechat-ai-backend-dev
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - CORS_ORIGINS=http://localhost:3000
    volumes:
      # Mount source code for hot reload in development
      - ./backend/app:/app/app:ro
      - ./requirements.txt:/app/requirements.txt:ro
    env_file:
      - .env
    networks:
      - gamechat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: gamechat-ai-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      # Mount source code for hot reload in development
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/next.config.js:/app/next.config.js:ro
      - ./frontend/tailwind.config.js:/app/tailwind.config.js:ro
      - ./frontend/tsconfig.json:/app/tsconfig.json:ro
    depends_on:
      - backend
    networks:
      - gamechat-network
    restart: unless-stopped
    command: npm run dev

networks:
  gamechat-network:
    driver: bridge

volumes:
  backend_data:
  frontend_data:
