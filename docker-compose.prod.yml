services:
  # Redis service for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: gamechat-ai-redis-prod
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_prod_data:/data
    networks:
      - gamechat-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Backend service (Production)
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: gamechat-ai-backend-prod
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - CORS_ORIGINS=${CORS_ORIGINS:-https://yourdomain.com}
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_DIR=/app/logs
    env_file:
      - ./backend/.env.production
    volumes:
      - backend_prod_logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - gamechat-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend is now deployed on Firebase Hosting (static site)
  # No longer using Docker container for frontend production

  # Nginx reverse proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: gamechat-ai-nginx-prod
    ports:
      - "8080:8080"  # Main API access port
      - "80:80"      # Redirect port
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl:ro
    depends_on:
      - backend
    networks:
      - gamechat-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  gamechat-network:
    driver: bridge

volumes:
  backend_prod_data:
  backend_prod_logs:
  redis_prod_data:
