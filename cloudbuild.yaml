steps:
  # データファイルの準備
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # データディレクトリを作成
        mkdir -p data
        
        # サンプルデータファイルを作成（実際のデータファイルがない場合の安全対策）
        cat > data/data.json << 'EOF'
        [
          {
            "id": "sample-1",
            "title": "サンプルデータ",
            "content": "このサンプルデータは、実際のデータファイルが利用できない場合のフォールバックです。",
            "category": "system",
            "created_at": "2025-06-20T00:00:00Z"
          }
        ]
        EOF
        
        # その他の必要なファイルも作成
        cat > data/convert_data.json << 'EOF'
        [
          {
            "id": "sample-1",
            "title": "サンプルデータ",
            "content": "このサンプルデータは、実際のデータファイルが利用できない場合のフォールバックです。",
            "category": "system",
            "created_at": "2025-06-20T00:00:00Z"
          }
        ]
        EOF
        
        # 空のembeddingファイルを作成
        echo '[]' > data/embedding_list.jsonl
        echo '[]' > data/query_data.json
        
        echo "データファイルの準備が完了しました"
        ls -la data/

  # 環境変数の設定
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # backend用の環境変数ファイル作成
        echo "ENVIRONMENT=production" > backend/.env.production
        echo "CORS_ORIGINS=https://gamechat-ai.web.app,https://gamechat-ai.firebaseapp.com" >> backend/.env.production
        echo "BACKEND_OPENAI_API_KEY=$$BACKEND_OPENAI_API_KEY" >> backend/.env.production
        # Cloud Run用の環境変数ファイル作成（YAML形式）
        cat > cloud-run-env.yaml << EOF
        ENVIRONMENT: production
        LOG_LEVEL: INFO
        CORS_ORIGINS: "https://gamechat-ai.web.app,https://gamechat-ai.firebaseapp.com"
        # Google Cloud Storage設定
        GCS_BUCKET_NAME: "gamechat-ai-data"
        GCS_PROJECT_ID: "gamechat-ai"
        # データファイルパス（後方互換性のため保持）
        DATA_FILE_PATH: "/app/data/data.json"
        CONVERTED_DATA_FILE_PATH: "/app/data/convert_data.json"
        EMBEDDING_FILE_PATH: "/app/data/embedding_list.jsonl"
        QUERY_DATA_FILE_PATH: "/app/data/query_data.json"
        EOF
    secretEnv: ['BACKEND_OPENAI_API_KEY', 'UPSTASH_VECTOR_REST_URL', 'UPSTASH_VECTOR_REST_TOKEN', 'RECAPTCHA_SECRET', 'API_KEY_DEVELOPMENT', 'API_KEY_PRODUCTION']

  # バックエンドDockerイメージのビルド
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--platform', 'linux/amd64',
      '-f', 'backend/Dockerfile',
      '-t', 'asia-northeast1-docker.pkg.dev/gamechat-ai/gamechat-ai-backend/backend:$BUILD_ID',
      '-t', 'asia-northeast1-docker.pkg.dev/gamechat-ai/gamechat-ai-backend/backend:latest',
      '.'
    ]

  # Artifact Registryにプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-northeast1-docker.pkg.dev/gamechat-ai/gamechat-ai-backend/backend:$BUILD_ID']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-northeast1-docker.pkg.dev/gamechat-ai/gamechat-ai-backend/backend:latest']

  # Cloud Runにデプロイ
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'gamechat-ai-backend',
      '--image', 'asia-northeast1-docker.pkg.dev/gamechat-ai/gamechat-ai-backend/backend:$BUILD_ID',
      '--region', 'asia-northeast1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8000',
      '--memory', '1Gi',
      '--cpu', '1',
      '--max-instances', '10',
      '--env-vars-file', 'cloud-run-env.yaml',
      '--update-secrets', 'OPENAI_API_KEY=OPENAI_API_KEY:latest',
      '--update-secrets', 'UPSTASH_VECTOR_REST_URL=UPSTASH_VECTOR_REST_URL:latest',
      '--update-secrets', 'UPSTASH_VECTOR_REST_TOKEN=UPSTASH_VECTOR_REST_TOKEN:latest',
      '--update-secrets', 'RECAPTCHA_SECRET=RECAPTCHA_SECRET:latest',
      '--update-secrets', 'API_KEY_DEVELOPMENT=API_KEY_DEVELOPMENT:latest',
      '--update-secrets', 'API_KEY_PRODUCTION=API_KEY_PRODUCTION:latest'
    ]
    env:
      - 'CLOUDSDK_RUN_REGION=asia-northeast1'

# ビルドのタイムアウト設定
timeout: 1200s

# シークレットの設定
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/OPENAI_API_KEY/versions/latest
      env: OPENAI_API_KEY
    - versionName: projects/$PROJECT_ID/secrets/UPSTASH_VECTOR_REST_URL/versions/latest
      env: UPSTASH_VECTOR_REST_URL
    - versionName: projects/$PROJECT_ID/secrets/UPSTASH_VECTOR_REST_TOKEN/versions/latest
      env: UPSTASH_VECTOR_REST_TOKEN
    - versionName: projects/$PROJECT_ID/secrets/RECAPTCHA_SECRET/versions/latest
      env: RECAPTCHA_SECRET
    - versionName: projects/$PROJECT_ID/secrets/API_KEY_DEVELOPMENT/versions/latest
      env: API_KEY_DEVELOPMENT
    - versionName: projects/$PROJECT_ID/secrets/API_KEY_PRODUCTION/versions/latest
      env: API_KEY_PRODUCTION

# ビルドオプション
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
